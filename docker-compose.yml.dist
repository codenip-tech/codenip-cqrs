version: '3.5'

services:
  codenip-cqrs:
    container_name: codenip-cqrs
    build:
      context: ./docker
      args:
        UID: $U_ID
    volumes:
      - ./:/var/www/html
    ###> XDEBUG 3 ###
    # Use your client IP here
    # Linux: run "ip a | grep docker0"
    # Windows (with WSL2) and Mac: host.docker.internal
    environment:
      XDEBUG_CLIENT_HOST: 172.17.0.1
      XDEBUG_CLIENT_PORT: 9003
      PHP_IDE_CONFIG: serverName=symfony-server
    ports:
      - '1000:80'
    networks:
      - codenip-cqrs-network
    depends_on:
      - codenip-cqrs-mysql

  codenip-cqrs-mysql:
    container_name: codenip-cqrs-mysql
    image: mysql:8.2.0
    ports:
      - '3336:3306'
    environment:
      MYSQL_DATABASE: codenip-cqrs
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - codenip-cqrs-mysql-data:/var/lib/mysql
    networks:
      - codenip-cqrs-network
    command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]

  codenip-cqrs-mongo:
    container_name: codenip-cqrs-mongo
    image: mongo:7.0.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: expenses
    ports:
      - '27077:27017'
    networks:
      - codenip-cqrs-network

  codenip-cqrs-rabbitmq:
    container_name: codenip-cqrs-rabbitmq
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - codenip-cqrs-network

networks:
  codenip-cqrs-network:

volumes:
  codenip-cqrs-mysql-data:
